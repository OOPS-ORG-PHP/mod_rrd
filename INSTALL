$Id$

* mod_rrd 를 빌드하기 위한 조건

1. rrdtool 이 설치 되어 있어야 함. 1.0.45 이상 버전에서 1.2.30
   가지 테스트가 되었습니다.
2. php4 또는 php5 가 설치 되어 있어야 합니다.


* mod_rrd 설치

php extension 은 3가지의 방법으로 빌드를 할 수 있습니다.
또한, 빌드를 위해서는 rrdtool 이 설치 되어 있어야 합니다.

1. phpize 를 이용하여 독립적으로  shared extension 으로 빌드

   1) 임의의 디렉토리에 mod_rrd 의 소스를 풀어 놓습니다.

      # cd /tmp
      # tar xvfpj mod_rrd-1.2.2.tar.bz2

   2) phpize 를 실행하여 빌드를 하기 위한 준비를 합니다.

      # cd mod_rrd-1.2.2
      # phpize

   3) ./configure 를 실행합니다.

      여기서 주의할 것은 rrdtool 을 임의의 경로에 설치 하셨다면,
      librrd.so 와 rrd.h 의 경로를 지정해 주는 것이 좋습니다. librrd.so
      의 경로가 /usr/local/lib/librrd.so 이고, rrd.h 의 경로가
      /usr/local/include/rrdtool/rrd.h 라면 아래같이 실행을 하도록 합니
      다.

      설치 하는 서버가 리눅스라면 /usr/lib 와 /usr/include 에 각각 들어
      있을 경우에는 생략하실 수 있습니다.

      LDFLAGS 는 라이브러리 (librrd.so 또는 librrd.a ) 가 존재하는 경로
      를 지정해 주며, CPPLFAGS 는 헤더 파일 (rrd.h) 가 있는 경로를 지정
      해 줍니다.

      librrd.a 또는 librrd.so 는 아래의 경로에 있을경우 설치 스크립트가
      자동으로 찾기 때문에, 위의 LDFALGS 에 대한 언급을 무시하셔도 됩니
      다.

      /usr/lib
      /usr/local/lib
      /usr/local/rrdtool/lib 

      rrd.h 는 아래의 경로에 있을 경우 설치 스크립트가 자동으로 찾기 때
      문에, 위의 CPPFLAGS 에 대한 언급을 무시하셔도 됩니다.

      # LDFLAGS=-L/usr/local/lib CPPFLAGS=/usr/local/include/rrdtll ./configure

      rrdtool 1.2 를 링크할 경우, lib_art_lgpl_2 library 를 찾지 못한다
      고 할 경우, 역시 libart_art_lgpl library 가 설치된 경로는 LDFLAGS
      에 지정하고 ./configure 를 하면 됩니다.

   4) make 와 make install 을 이용하여 컴파일 후, 설치 합니다.

      # make
      # make install

   5) php.ini 에서 extension=rrd.so 를 등록한 후,  web server 를 재시작
      합니다.


2. --with-rrdtool=shared 를 이용한 shared extension 으로 빌드

   1) php source 를 설치 합니다.

      # tar xvjpz php-5.2.9.tar.bz2

   2) ext directory 에 mod_rrd 의 소스를 풀어 놓습니다.

      # cd php-5.2.9/ext
      # tar xvfpj mod_rrd-1.2.2.tar.bz2
      # mv mod_rrd-1.2.2 rrd

   3) ./configure 에 --with-rrd=shared 옵션을 주고 실행 합니다. rrdtool
      의 라이브러리와 헤더파일에 대한 언급은  "1. phpize 를 이용하여 독
      립적으로 shared extension 으로 빌드" 의 3번 항목을 참고 하십시오.

      # ./configure --with-rrd=shared

   4) 나머지 과정은 "1. phpize 를 이용하여 독립적으로 shared extension
      으로 빌드" 의 4번 5번 항목을 참고 하십시오.


3. --with-rrdtool 옵션을 이용한 정적인 빌드

   정적으로 빌드하는 방법은 2번 항목과 동일하며, 2번 항목의 3)번 항목의
   ./configure 시에 --with-rrdtoo과 같이 shared 옵션만 빼고 빌드 하시면
   됩니다.



- 김정균 <http://www.oops.org> 2009.03.10
